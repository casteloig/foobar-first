name: push-dhub

on:
  push:
    branches:
      - main
    tags:
      - latest

env:
  IMAGE_NAME_FOO: foo
  IMAGE_NAME_BAR: bar

jobs:

  # foo
  push_foo:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        with:
          repo-token: ${{ secrets.ACCESS_TOKEN_GITHUB }}

      - name: Build image
        run: docker build -t $IMAGE_NAME_FOO foo/
      
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN}}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_FOO

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME_FOO $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


  # bar
  push_bar:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build -t $IMAGE_NAME_BAR
      
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN}}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_BAR

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME_BAR $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
